%% vim: ft=erlang :

%%-----------------------------------------------------------------------------
%% use http client in OTP
%%-----------------------------------------------------------------------------
httpc:request(post, {"https://google.com",[{"token","xxx"}],"",<<"body">>},
	      [{timeout,3000}], [{body_format,binary},{full_result,false}]).
%> {error,{failed_connect,[{to_address,{"google.com",443}},
%			{inet,[inet],timeout}]}}

httpc:request(get, {"https://google.com",[]}, [{timeout,3000}],
	      [{body_format,binary},{full_result,false}]).
%> {error,{failed_connect,[{to_address,{"google.com",443}},
%			{inet,[inet],timeout}]}}

httpc:request(get, {"https://baidu.com",[]}, [{timeout,3000}],
	      [{body_format,binary},{full_result,false}]).
%> {ok,{200,
%     <<"<!DOCTYPE html>\r\n<html>\r\n<head>\n\t"...>>}}



%% !! the following situation could be a bug (in OTP21)

%% heads in httpc:request should be [{string(),string()},...],

httpc:request(get, {"http://google.com",[{"token",<<1,2,3>>}]}, [], []).
%> {error,{headers_error,not_strings}}

%% When the request is POST and headers are invalid, things goes wrong:

httpc:request(post, {"http://google.com",[{"token",<<1,2,3>>}],"",<<>>},
	      [], []).
%  =CRASH REPORT==== 11-Dec-2020::17:54:26.501135 ===
%  ...
%	          exception error: bad argument
%		        in operator  ++/2
%			         called as <<1,2,3>> ++ "\r\n"
%
%  (and the shell is dead now)

